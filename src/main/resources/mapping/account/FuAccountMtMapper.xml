<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.future.mapper.account.FuAccountMtMapper">
  <resultMap id="BaseResultMap" type="com.future.entity.account.FuAccountMt">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="server_id" jdbcType="INTEGER" property="serverId" />
    <result column="broker_id" jdbcType="INTEGER" property="brokerId" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="password_trade" jdbcType="VARCHAR" property="passwordTrade" />
    <result column="password_watch" jdbcType="VARCHAR" property="passwordWatch" />
    <result column="password_trade_checked" jdbcType="TINYINT" property="passwordTradeChecked" />
    <result column="password_watch_checked" jdbcType="TINYINT" property="passwordWatchChecked" />
    <result column="is_chief" jdbcType="TINYINT" property="isChief" />
    <result column="account_type" jdbcType="TINYINT" property="accountType" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, server_id, broker_id, account_id, password_trade, password_watch, password_trade_checked, 
    password_watch_checked, is_chief, account_type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fu_account_mt
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fu_account_mt
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.future.entity.account.FuAccountMt">
    insert into fu_account_mt (id, user_id, server_id, 
      broker_id, account_id, password_trade, 
      password_watch, password_trade_checked, password_watch_checked, 
      is_chief, account_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{serverId,jdbcType=INTEGER}, 
      #{brokerId,jdbcType=INTEGER}, #{accountId,jdbcType=VARCHAR}, #{passwordTrade,jdbcType=VARCHAR}, 
      #{passwordWatch,jdbcType=VARCHAR}, #{passwordTradeChecked,jdbcType=TINYINT}, #{passwordWatchChecked,jdbcType=TINYINT}, 
      #{isChief,jdbcType=TINYINT}, #{accountType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.future.entity.account.FuAccountMt">
    insert into fu_account_mt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="serverId != null">
        server_id,
      </if>
      <if test="brokerId != null">
        broker_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="passwordTrade != null">
        password_trade,
      </if>
      <if test="passwordWatch != null">
        password_watch,
      </if>
      <if test="passwordTradeChecked != null">
        password_trade_checked,
      </if>
      <if test="passwordWatchChecked != null">
        password_watch_checked,
      </if>
      <if test="isChief != null">
        is_chief,
      </if>
      <if test="accountType != null">
        account_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="serverId != null">
        #{serverId,jdbcType=INTEGER},
      </if>
      <if test="brokerId != null">
        #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="passwordTrade != null">
        #{passwordTrade,jdbcType=VARCHAR},
      </if>
      <if test="passwordWatch != null">
        #{passwordWatch,jdbcType=VARCHAR},
      </if>
      <if test="passwordTradeChecked != null">
        #{passwordTradeChecked,jdbcType=TINYINT},
      </if>
      <if test="passwordWatchChecked != null">
        #{passwordWatchChecked,jdbcType=TINYINT},
      </if>
      <if test="isChief != null">
        #{isChief,jdbcType=TINYINT},
      </if>
      <if test="accountType != null">
        #{accountType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.future.entity.account.FuAccountMt">
    update fu_account_mt
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="serverId != null">
        server_id = #{serverId,jdbcType=INTEGER},
      </if>
      <if test="brokerId != null">
        broker_id = #{brokerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="passwordTrade != null">
        password_trade = #{passwordTrade,jdbcType=VARCHAR},
      </if>
      <if test="passwordWatch != null">
        password_watch = #{passwordWatch,jdbcType=VARCHAR},
      </if>
      <if test="passwordTradeChecked != null">
        password_trade_checked = #{passwordTradeChecked,jdbcType=TINYINT},
      </if>
      <if test="passwordWatchChecked != null">
        password_watch_checked = #{passwordWatchChecked,jdbcType=TINYINT},
      </if>
      <if test="isChief != null">
        is_chief = #{isChief,jdbcType=TINYINT},
      </if>
      <if test="accountType != null">
        account_type = #{accountType,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.future.entity.account.FuAccountMt">
    update fu_account_mt
    set user_id = #{userId,jdbcType=INTEGER},
      server_id = #{serverId,jdbcType=INTEGER},
      broker_id = #{brokerId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=VARCHAR},
      password_trade = #{passwordTrade,jdbcType=VARCHAR},
      password_watch = #{passwordWatch,jdbcType=VARCHAR},
      password_trade_checked = #{passwordTradeChecked,jdbcType=TINYINT},
      password_watch_checked = #{passwordWatchChecked,jdbcType=TINYINT},
      is_chief = #{isChief,jdbcType=TINYINT},
      account_type = #{accountType,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>