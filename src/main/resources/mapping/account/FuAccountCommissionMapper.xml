<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.future.mapper.account.FuAccountCommissionMapper">
  <resultMap id="BaseResultMap" type="com.future.entity.account.FuAccountCommission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="commission_money" jdbcType="DECIMAL" property="commissionMoney" />
    <result column="commission_paid" jdbcType="DECIMAL" property="commissionPaid" />
    <result column="commission_total" jdbcType="DECIMAL" property="commissionTotal" />
    <result column="commission_source_money" jdbcType="DECIMAL" property="commissionSourceMoney" />
    <result column="commission_source_lots" jdbcType="DECIMAL" property="commissionSourceLots" />
    <result column="commission_level" jdbcType="TINYINT" property="commissionLevel" />
    <result column="commission_rate" jdbcType="DECIMAL" property="commissionRate" />
    <result column="commission_debt_amt" jdbcType="DECIMAL" property="commissionDebtAmt" />
    <result column="account_state" jdbcType="TINYINT" property="accountState" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_date, modify_date, user_id, account_id, commission_money, commission_paid, 
    commission_total, commission_source_money, commission_source_lots, commission_level, 
    commission_rate, commission_debt_amt, account_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fu_account_commission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fu_account_commission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.future.entity.account.FuAccountCommission">
    insert into fu_account_commission (id, create_date, modify_date, 
      user_id, account_id, commission_money, 
      commission_paid, commission_total, commission_source_money, 
      commission_source_lots, commission_level, 
      commission_rate, commission_debt_amt, account_state
      )
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{commissionMoney,jdbcType=DECIMAL}, 
      #{commissionPaid,jdbcType=DECIMAL}, #{commissionTotal,jdbcType=DECIMAL}, #{commissionSourceMoney,jdbcType=DECIMAL}, 
      #{commissionSourceLots,jdbcType=DECIMAL}, #{commissionLevel,jdbcType=TINYINT}, 
      #{commissionRate,jdbcType=DECIMAL}, #{commissionDebtAmt,jdbcType=DECIMAL}, #{accountState,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.future.entity.account.FuAccountCommission">
    insert into fu_account_commission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="modifyDate != null">
        modify_date,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="commissionMoney != null">
        commission_money,
      </if>
      <if test="commissionPaid != null">
        commission_paid,
      </if>
      <if test="commissionTotal != null">
        commission_total,
      </if>
      <if test="commissionSourceMoney != null">
        commission_source_money,
      </if>
      <if test="commissionSourceLots != null">
        commission_source_lots,
      </if>
      <if test="commissionLevel != null">
        commission_level,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="commissionDebtAmt != null">
        commission_debt_amt,
      </if>
      <if test="accountState != null">
        account_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="commissionMoney != null">
        #{commissionMoney,jdbcType=DECIMAL},
      </if>
      <if test="commissionPaid != null">
        #{commissionPaid,jdbcType=DECIMAL},
      </if>
      <if test="commissionTotal != null">
        #{commissionTotal,jdbcType=DECIMAL},
      </if>
      <if test="commissionSourceMoney != null">
        #{commissionSourceMoney,jdbcType=DECIMAL},
      </if>
      <if test="commissionSourceLots != null">
        #{commissionSourceLots,jdbcType=DECIMAL},
      </if>
      <if test="commissionLevel != null">
        #{commissionLevel,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="commissionDebtAmt != null">
        #{commissionDebtAmt,jdbcType=DECIMAL},
      </if>
      <if test="accountState != null">
        #{accountState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.future.entity.account.FuAccountCommission">
    update fu_account_commission
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="commissionMoney != null">
        commission_money = #{commissionMoney,jdbcType=DECIMAL},
      </if>
      <if test="commissionPaid != null">
        commission_paid = #{commissionPaid,jdbcType=DECIMAL},
      </if>
      <if test="commissionTotal != null">
        commission_total = #{commissionTotal,jdbcType=DECIMAL},
      </if>
      <if test="commissionSourceMoney != null">
        commission_source_money = #{commissionSourceMoney,jdbcType=DECIMAL},
      </if>
      <if test="commissionSourceLots != null">
        commission_source_lots = #{commissionSourceLots,jdbcType=DECIMAL},
      </if>
      <if test="commissionLevel != null">
        commission_level = #{commissionLevel,jdbcType=TINYINT},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="commissionDebtAmt != null">
        commission_debt_amt = #{commissionDebtAmt,jdbcType=DECIMAL},
      </if>
      <if test="accountState != null">
        account_state = #{accountState,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.future.entity.account.FuAccountCommission">
    update fu_account_commission
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      commission_money = #{commissionMoney,jdbcType=DECIMAL},
      commission_paid = #{commissionPaid,jdbcType=DECIMAL},
      commission_total = #{commissionTotal,jdbcType=DECIMAL},
      commission_source_money = #{commissionSourceMoney,jdbcType=DECIMAL},
      commission_source_lots = #{commissionSourceLots,jdbcType=DECIMAL},
      commission_level = #{commissionLevel,jdbcType=TINYINT},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      commission_debt_amt = #{commissionDebtAmt,jdbcType=DECIMAL},
      account_state = #{accountState,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryAccountCommissionByProject" parameterType="java.util.Map" resultType="com.future.entity.account.FuAccountCommission">
    SELECT
      c.id AS id,
      c.create_date AS createDate,
      c.modify_date AS modifyDate,
      c.user_id AS userId,
      c.account_id AS accountId,
      c.commission_money AS commissionMoney,
      c.commission_paid AS commissionPaid,
      c.commission_total AS commissionTotal,
      c.commission_source_money AS commissionSourceMoney,
      c.commission_source_lots AS commissionSourceLots,
      c.commission_level AS commissionLevel,
      c.commission_rate AS commissionRate,
      c.commission_debt_amt AS commissionDebtAmt,
      c.account_state AS accountState
    FROM
      fu_account_commission c LEFT JOIN fu_permission_userproject p on c.user_id=p.user_id
    where
      1 = 1
      <if test="userId != null and userId != ''">
        and c.user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="accountId != null and accountId != ''">
        and c.account_id = #{accountId,jdbcType=INTEGER}
      </if>
      <if test="commissionLevel != null and  commissionLevel != '' or  commissionLevel == '0'.toString()">
        and c.commission_level = #{commissionLevel,jdbcType=TINYINT}
      </if>
      <if test="accountState != null and  accountState != '' or  accountState == '0'.toString()">
        and c.account_state = #{accountState,jdbcType=TINYINT}
      </if>
      <if test="projKey != null and  orderType != '' or  orderType == '0'.toString()">
        and p.proj_key = #{projKey,jdbcType=INTEGER}
      </if>
  </select>
</mapper>