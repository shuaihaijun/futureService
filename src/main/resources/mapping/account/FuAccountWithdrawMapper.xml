<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.future.mapper.account.FuAccountWithdrawMapper">
  <resultMap id="BaseResultMap" type="com.future.entity.account.FuAccountWithdraw">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="oper_user_id" jdbcType="INTEGER" property="operUserId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="ref_name" jdbcType="VARCHAR" property="refName" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="withdraw_type" jdbcType="TINYINT" property="withdrawType" />
    <result column="withdraw_amount" jdbcType="DECIMAL" property="withdrawAmount" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_code" jdbcType="VARCHAR" property="bankCode" />
    <result column="host_name" jdbcType="VARCHAR" property="hostName" />
    <result column="account_before" jdbcType="DECIMAL" property="accountBefore" />
    <result column="account_after" jdbcType="DECIMAL" property="accountAfter" />
    <result column="withdraw_time" jdbcType="TIMESTAMP" property="withdrawTime" />
    <result column="withdraw_rmb" jdbcType="DECIMAL" property="withdrawRmb" />
    <result column="withdraw_state" jdbcType="TINYINT" property="withdrawState" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_date, oper_user_id, user_id, username, ref_name, account_id, withdraw_type, 
    withdraw_amount, bank_name, bank_code, host_name, account_before, account_after, 
    withdraw_time, withdraw_rmb, withdraw_state, comment
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fu_account_withdraw
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fu_account_withdraw
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.future.entity.account.FuAccountWithdraw">
    insert into fu_account_withdraw (id, create_date, oper_user_id, 
      user_id, username, ref_name, 
      account_id, withdraw_type, withdraw_amount, 
      bank_name, bank_code, host_name, 
      account_before, account_after, withdraw_time, 
      withdraw_rmb, withdraw_state, comment
      )
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{operUserId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{refName,jdbcType=VARCHAR}, 
      #{accountId,jdbcType=INTEGER}, #{withdrawType,jdbcType=TINYINT}, #{withdrawAmount,jdbcType=DECIMAL}, 
      #{bankName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, #{hostName,jdbcType=VARCHAR}, 
      #{accountBefore,jdbcType=DECIMAL}, #{accountAfter,jdbcType=DECIMAL}, #{withdrawTime,jdbcType=TIMESTAMP}, 
      #{withdrawRmb,jdbcType=DECIMAL}, #{withdrawState,jdbcType=TINYINT}, #{comment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.future.entity.account.FuAccountWithdraw">
    insert into fu_account_withdraw
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="operUserId != null">
        oper_user_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="refName != null">
        ref_name,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="withdrawType != null">
        withdraw_type,
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankCode != null">
        bank_code,
      </if>
      <if test="hostName != null">
        host_name,
      </if>
      <if test="accountBefore != null">
        account_before,
      </if>
      <if test="accountAfter != null">
        account_after,
      </if>
      <if test="withdrawTime != null">
        withdraw_time,
      </if>
      <if test="withdrawRmb != null">
        withdraw_rmb,
      </if>
      <if test="withdrawState != null">
        withdraw_state,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operUserId != null">
        #{operUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="refName != null">
        #{refName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="withdrawType != null">
        #{withdrawType,jdbcType=TINYINT},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="accountBefore != null">
        #{accountBefore,jdbcType=DECIMAL},
      </if>
      <if test="accountAfter != null">
        #{accountAfter,jdbcType=DECIMAL},
      </if>
      <if test="withdrawTime != null">
        #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawRmb != null">
        #{withdrawRmb,jdbcType=DECIMAL},
      </if>
      <if test="withdrawState != null">
        #{withdrawState,jdbcType=TINYINT},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.future.entity.account.FuAccountWithdraw">
    update fu_account_withdraw
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="operUserId != null">
        oper_user_id = #{operUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="refName != null">
        ref_name = #{refName,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="withdrawType != null">
        withdraw_type = #{withdrawType,jdbcType=TINYINT},
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null">
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        host_name = #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="accountBefore != null">
        account_before = #{accountBefore,jdbcType=DECIMAL},
      </if>
      <if test="accountAfter != null">
        account_after = #{accountAfter,jdbcType=DECIMAL},
      </if>
      <if test="withdrawTime != null">
        withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawRmb != null">
        withdraw_rmb = #{withdrawRmb,jdbcType=DECIMAL},
      </if>
      <if test="withdrawState != null">
        withdraw_state = #{withdrawState,jdbcType=TINYINT},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.future.entity.account.FuAccountWithdraw">
    update fu_account_withdraw
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      oper_user_id = #{operUserId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      ref_name = #{refName,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=INTEGER},
      withdraw_type = #{withdrawType,jdbcType=TINYINT},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      account_before = #{accountBefore,jdbcType=DECIMAL},
      account_after = #{accountAfter,jdbcType=DECIMAL},
      withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      withdraw_rmb = #{withdrawRmb,jdbcType=DECIMAL},
      withdraw_state = #{withdrawState,jdbcType=TINYINT},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findWithdrawByProjCondtion" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
    a.id,
    a.create_date,
    a.oper_user_id,
    a.user_id,
    a.username,
    a.ref_name,
    a.account_id,
    a.withdraw_type,
    a.withdraw_amount,
    a.bank_name,
    a.bank_code,
    a.host_name,
    a.account_before,
    a.account_after,
    a.withdraw_time,
    a.withdraw_rmb,
    a.withdraw_state,
    a.COMMENT
    FROM
    fu_account_withdraw a
    LEFT JOIN fu_permission_userproject p ON a.user_id = p.user_id
    where 1=1
    <if test="id != null">
      and a.id = #{id,jdbcType=INTEGER}
    </if>
    <if test="userId != null">
      and a.user_id = #{userId,jdbcType=INTEGER}
    </if>
    <if test="operUserId != null">
      and a.oper_user_id = #{operUserId,jdbcType=INTEGER}
    </if>
    <if test="accountId != null">
      and a.account_id = #{accountId,jdbcType=INTEGER}
    </if>
    <if test="username != null">
      and a.username = #{username,jdbcType=VARCHAR}
    </if>
    <if test="refName != null">
      and a.ref_name = #{refName,jdbcType=VARCHAR}
    </if>
    <if test="withdrawType != null">
      and a.withdraw_type = #{withdrawType,jdbcType=TINYINT}
    </if>
    <if test="withdrawAmount != null">
      and a.withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL}
    </if>
    <if test="bankName != null">
      and a.bank_name = #{bankName,jdbcType=VARCHAR}
    </if>
    <if test="bankCode != null">
      and a.bank_code = #{bankCode,jdbcType=VARCHAR}
    </if>
    <if test="hostName != null">
      and a.host_name = #{hostName,jdbcType=VARCHAR}
    </if>
    <if test="comment != null">
      and a.comment = #{comment,jdbcType=VARCHAR}
    </if>
    withdrawTime
    <if test="projKey != null">
      and p.proj_key = #{projKey,jdbcType=INTEGER}
    </if>
    order by id desc
  </select>
</mapper>